// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// File: prisma/schema.prisma (Version 3.1 - Corrected)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  clerkUserId String       @unique
  email       String       @unique
  name        String?
  imageUrl    String?
  categories  Collection[]
  entries     Entry[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Collection {
  id         String     @id @default(cuid())
  name       String
  userId     String
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  entries    Entry[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@unique([name, userId])
}

model Entry {
  id            String       @id @default(cuid())
  title         String?
  content       String?      @db.Text
  journalDate   DateTime
  timeZone      String?
  mood          String?
  photos        Photo[]
  userId        String
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  collectionId  String?
  collection    Collection?  @relation(fields: [collectionId], references: [id], onDelete: SetNull)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Photo {
  id           String     @id @default(cuid())
  url          String
  orderInEntry Int
  entryId      String
  entry        Entry      @relation(fields: [entryId], references: [id], onDelete: Cascade)
  createdAt    DateTime   @default(now())
}


// @db.Text 告诉PostgreSQL存储没有长度限制、理论上可以无限长的文本